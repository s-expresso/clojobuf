syntax = "proto2";

import "reference2.proto";

enum Enum {
MINUS_ONE = -1;
ZERO = 0;
    ONE = 1;
    TWO = 2;
    THREE = 3;
    FOUR = 4;
    FIVE = 5;
}

message Singular {
    // wire-type 0
    optional int32 int32_val       = 1;
    optional int64 int64_val       = 2;
    optional uint32 uint32_val     = 3;
    optional uint64 uint64_val     = 4;
    optional sint32 sint32_val     = 5;
    optional sint64 sint64_val     = 6;
    optional bool bool_val         = 7;
    optional Enum enum_val         = 8;
    // wire-type 1
    optional fixed64 fixed64_val   = 9;
    optional sfixed64 sfixed64_val = 10;
    optional double double_val     = 11;
    // wire-type 2
    optional string string_val     = 12;
    optional bytes bytes_val       = 13;
    // wire-type 5
    optional fixed32 fixed32_val   = 14;
    optional sfixed32 sfixed32_val = 15;    
    optional float float_val       = 16;
}

message Packed {
    // wire-type 0
    repeated int32 int32_val       = 1 [packed = true];
    repeated int64 int64_val       = 2 [packed = true];
    repeated uint32 uint32_val     = 3 [packed = true];
    repeated uint64 uint64_val     = 4 [packed = true];
    repeated sint32 sint32_val     = 5 [packed = true];
    repeated sint64 sint64_val     = 6 [packed = true];
    repeated bool bool_val         = 7 [packed = true];
    repeated Enum enum_val         = 8 [packed = true];
    // wire-type 1
    repeated fixed64 fixed64_val   = 9 [packed = true];
    repeated sfixed64 sfixed64_val = 10 [packed = true];
    repeated double double_val     = 11 [packed = true];
    // wire-type 2
    repeated string string_val     = 12;
    repeated bytes bytes_val       = 13;
    // wire-type 5
    repeated fixed32 fixed32_val   = 14 [packed = true];
    repeated sfixed32 sfixed32_val = 15 [packed = true];
    repeated float float_val       = 16 [packed = true];
}
