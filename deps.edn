{:paths ["src", "resources"]
 :deps {com.google.javascript/closure-compiler-unshaded {:mvn/version "v20230103"}
        metosin/malli {:mvn/version "0.13.0"}
        org.clojure/clojure {:mvn/version "1.11.1"}
        org.clojure/clojurescript {:mvn/version "1.11.60"}
        org.clojure/test.check {:mvn/version "0.10.0"}
        com.github.s-expresso/rubberbuf {:mvn/version "0.1.9.a"}
        com.github.s-expresso/clojobuf-codec {:mvn/version "0.1.6"}
        }
 :aliases {:test {:extra-paths ["test"]}

           ; clj -M:test:runner
           :runner {:extra-deps {io.github.cognitect-labs/test-runner
                                 {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                  :sha "9e35c979860c75555adaff7600070c60004a0f44"}}
                    :main-opts ["-m" "cognitect.test-runner"]
                    :exec-fn cognitect.test-runner.api/test}

           ; clj -M:test:cljs to run cljs tests
           :cljs {:extra-deps {olical/cljs-test-runner {:mvn/version "3.8.0"}}
                  :main-opts ["-m" "cljs-test-runner.main"]}
           
           ; update build.clj first
           ; clj -T:build jar
           :build {:deps {io.github.clojure/tools.build {:mvn/version "0.9.3"}}
                   :ns-default build}

           ; update pom.xml and :artifact below first
           ; ensure CLOJARS_USERNAME and CLOJARS_PASSWORD env vars are set
           ; clj -T:deploy
           :deploy {:extra-deps {slipset/deps-deploy {:mvn/version "0.2.0"}}
                    :exec-fn deps-deploy.deps-deploy/deploy
                    :exec-args {:installer :remote
                                :sign-releases? false
                                :artifact "target/clojobuf-0.1.12.jar"}}}}
